<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

        <title>Babylon.js sample code</title>
        <!-- Babylon.js -->
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script src="http://www.babylonjs.com/hand.minified-1.2.js"></script>
        <script src="http://www.babylonjs.com/cannon.js"></script>
        <script src="http://www.babylonjs.com/oimo.js"></script>
        <script src="http://www.babylonjs.com/babylon.js"></script>
        <style>
            html, body {
                overflow: hidden;
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
            }

            #renderCanvas {
                width: 100%;
                height: 100%;
                touch-action: none;
            }
        </style>
    </head>
<body>
<button onclick="enableAddVertex()">Add Vertex</button>
<button onclick="enableAddEdge()">Add Edge</button>
<button onclick="enableBFS()">BFS Search</button>
    <canvas id="renderCanvas"></canvas>
    <script>
	//use for adding edges
	var VertexCounter = 0;
	var edgeCounter = 0;
	
	//
	var Vertex = false;
	var Edge = false;
	var search = false;
	

		
	var edgeCountArray = [];

	function enableAddVertex(){
		
		Vertex = true;
		Edge = false;
		search = false;
		
	}
	function enableAddEdge(){
		
		Edge = true;
		Vertex = false;
		search = false;
		
	}
	function enableBFS(){
		search = true;
		Edge = false;
		Vertex = false;
	}
	var canvas = document.getElementById("renderCanvas");
        var engine = new BABYLON.Engine(canvas, true);
	

	//create an Edge
	var createEdge = function(scene, fromVertex, toVertex){
	var lines = BABYLON.Mesh.CreateLines("lines", [
        fromVertex,
        toVertex
    ], scene);	
	}
	//end of create Edge


	//add edge to vertexes
	var addEdge = function(scene, mesh){
		
		var defaultMaterial = new BABYLON.StandardMaterial("wallMat", scene);
			
    		
 		defaultMaterial.emissiveColor = BABYLON.Color3.Blue();


		var redMat = new BABYLON.StandardMaterial("wallMat", scene);
    		redMat.diffuseColor = new BABYLON.Color3(0.4, 0.4, 0.4);
    		redMat.specularColor = new BABYLON.Color3(0.4, 0.4, 0.4);
 		redMat.emissiveColor = BABYLON.Color3.Red();		


		mesh.actionManager = new BABYLON.ActionManager(scene);
		mesh.actionManager.registerAction(
            new BABYLON.SetValueAction(BABYLON.ActionManager.OnPickTrigger, mesh.material, "emissiveColor", new BABYLON.Color3.Red()))
		
		mesh.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickTrigger, 
		function(){
			edgeCountArray.push(mesh);
			edgeCounter++;
			if(edgeCounter == 2){
			createEdge(scene,edgeCountArray[0].position, edgeCountArray[1].position);
			for(var i = 0; i < edgeCountArray.length; i++){
				edgeCountArray[i].material.emissiveColor = new BABYLON.Color3.Blue();;
				//get positions
				
			}
			edgeCountArray = [];
			edgeCounter = 0;		

		}
			}));
	}





	//adds vertex to scene
	var addVertex = function(scene, locationx, locationy){
		VertexCounter++;
		var defaultMaterial = new BABYLON.StandardMaterial("wallMat", scene);
		
		var backgroundTexture2 = new BABYLON.DynamicTexture("dynamic texture", 512, scene, true);
		
		backgroundTexture2.drawText(VertexCounter.toString(), null, 350, "bold 100px Segoe UI", "white", "#555555");




		defaultTexture = new BABYLON.DynamicTexture("dynamic texture", 512, scene, true);
    		defaultTexture.hasAlpha = true;
		defaultMaterial.diffuseColor = new BABYLON.Color3(0.4, 0.4, 0.4);
    		defaultMaterial.specularColor = new BABYLON.Color3(0.4, 0.4, 0.4);
 		defaultMaterial.emissiveColor = BABYLON.Color3.Blue();
		var impact = BABYLON.Mesh.CreateSphere("VertexCounter",8.0, 4.0, scene);
		impact.position = new BABYLON.Vector3(locationx, locationy, -0.1);
		impact.material = defaultMaterial;
		impact.material.diffuseTexture = backgroundTexture2;
		defaultTexture.drawText("hi", null, null, "4px Segoe UI", "white", null);
		addEdge(scene, impact);
		return scene;
	
	}

        var createScene = function () {
            var scene = new BABYLON.Scene(engine);

		
            // setup environment
            var light0 = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 50, 0), scene);
            var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 0, 0, 0, BABYLON.Vector3.Zero(), scene);
            camera.setPosition(new BABYLON.Vector3(0, 15, -30));

	    var wall = BABYLON.Mesh.CreatePlane("wall", 80.0, scene);
            wall.material = new BABYLON.StandardMaterial("wallMat", scene);
            wall.material.emissiveColor = new BABYLON.Color3(0.5, 1, 0.5);
            wall.material.alpha = 0.0;


            // Impact impostor
            
        
            //When pointer down event is raised
            scene.onPointerDown = function (evt, pickResult) {
                // if the click hits the ground object, we change the impact position
                if (pickResult.hit && Vertex) {
                    scene = addVertex(scene, pickResult.pickedPoint.x, pickResult.pickedPoint.y);
		}
            };
            return scene;
        };
	
        
       
        var scene = createScene();
	
	scene.activeCamera.alpha += .01;
        engine.runRenderLoop(function () {
            scene.render();
        });

        // Resize
        window.addEventListener("resize", function () {
            engine.resize();
        });
    </script>
</body>
</html>
